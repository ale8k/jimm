name: Vulnerability Check

on:
  schedule:
    - cron: "0 6 */2 * *"   # Run every 2 days at 6 am
  workflow_dispatch:

jobs:
  govulncheck:
    runs-on:  ubuntu-latest
    name: Run govulncheck
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      # - name: Security scan
      #   uses: canonical/comsys-build-tools/.github/actions/security-scan@main
      #   with:
      #     upload_results: true
      #     upload_artifact: true
      

      #########
      # Trivy #
      #########
      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@0.23.0
        with:
          scan-type: 'fs'
          format: 'sarif'
          output: 'trivy-results.sarif'
        env:
          TRIVY_DB_REPOSITORY: ghcr.io/canonical/comsys-build-tools/trivy-db:2

      - name: Upload trivy scan results as artifact
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: 'trivy-security-scan-results'
          path: 'trivy-results.sarif'


      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

      ##########
      # Govuln #
      ##########
      - name: Go Vulnerability Check
        id: govulncheck
        uses: golang/govulncheck-action@v1
        with:
          output-format: 'sarif'
          output-file: 'govuln-results.sarif'

      - name: Upload govuln scan results as artifact
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: 'govuln-security-scan-results'
          path: 'govuln-results.sarif'
  
  
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'govuln-results.sarif'